// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/seckill.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinSeckillStatus int32

const (
	JoinSeckillStatus_JOIN_SECKILL_STATUS_UNKNOWN       JoinSeckillStatus = 0
	JoinSeckillStatus_JOIN_SECKILL_STATUS_NOT_START     JoinSeckillStatus = 1 // 未开始
	JoinSeckillStatus_JOIN_SECKILL_STATUS_FINISHED      JoinSeckillStatus = 2 // 已结束
	JoinSeckillStatus_JOIN_SECKILL_STATUS_PARTICIPATING JoinSeckillStatus = 3 // 参与中
	JoinSeckillStatus_JOIN_SECKILL_STATUS_SUCCESS       JoinSeckillStatus = 4 // 成功
	JoinSeckillStatus_JOIN_SECKILL_STATUS_FAIL          JoinSeckillStatus = 5 // 失败
)

// Enum value maps for JoinSeckillStatus.
var (
	JoinSeckillStatus_name = map[int32]string{
		0: "JOIN_SECKILL_STATUS_UNKNOWN",
		1: "JOIN_SECKILL_STATUS_NOT_START",
		2: "JOIN_SECKILL_STATUS_FINISHED",
		3: "JOIN_SECKILL_STATUS_PARTICIPATING",
		4: "JOIN_SECKILL_STATUS_SUCCESS",
		5: "JOIN_SECKILL_STATUS_FAIL",
	}
	JoinSeckillStatus_value = map[string]int32{
		"JOIN_SECKILL_STATUS_UNKNOWN":       0,
		"JOIN_SECKILL_STATUS_NOT_START":     1,
		"JOIN_SECKILL_STATUS_FINISHED":      2,
		"JOIN_SECKILL_STATUS_PARTICIPATING": 3,
		"JOIN_SECKILL_STATUS_SUCCESS":       4,
		"JOIN_SECKILL_STATUS_FAIL":          5,
	}
)

func (x JoinSeckillStatus) Enum() *JoinSeckillStatus {
	p := new(JoinSeckillStatus)
	*p = x
	return p
}

func (x JoinSeckillStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinSeckillStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_seckill_proto_enumTypes[0].Descriptor()
}

func (JoinSeckillStatus) Type() protoreflect.EnumType {
	return &file_proto_seckill_proto_enumTypes[0]
}

func (x JoinSeckillStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinSeckillStatus.Descriptor instead.
func (JoinSeckillStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{0}
}

type InquireSeckillStatus int32

const (
	InquireSeckillStatus_INQUIRE_SECKILL_STATUS_UNKNOWN  InquireSeckillStatus = 0
	InquireSeckillStatus_INQUIRE_SECKILL_STATUS_QUEUEING InquireSeckillStatus = 1 // 排队中
	InquireSeckillStatus_INQUIRE_SECKILL_STATUS_SUCCESS  InquireSeckillStatus = 3 // 成功
	InquireSeckillStatus_INQUIRE_SECKILL_STATUS_FAIL     InquireSeckillStatus = 4 // 失败
)

// Enum value maps for InquireSeckillStatus.
var (
	InquireSeckillStatus_name = map[int32]string{
		0: "INQUIRE_SECKILL_STATUS_UNKNOWN",
		1: "INQUIRE_SECKILL_STATUS_QUEUEING",
		3: "INQUIRE_SECKILL_STATUS_SUCCESS",
		4: "INQUIRE_SECKILL_STATUS_FAIL",
	}
	InquireSeckillStatus_value = map[string]int32{
		"INQUIRE_SECKILL_STATUS_UNKNOWN":  0,
		"INQUIRE_SECKILL_STATUS_QUEUEING": 1,
		"INQUIRE_SECKILL_STATUS_SUCCESS":  3,
		"INQUIRE_SECKILL_STATUS_FAIL":     4,
	}
)

func (x InquireSeckillStatus) Enum() *InquireSeckillStatus {
	p := new(InquireSeckillStatus)
	*p = x
	return p
}

func (x InquireSeckillStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InquireSeckillStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_seckill_proto_enumTypes[1].Descriptor()
}

func (InquireSeckillStatus) Type() protoreflect.EnumType {
	return &file_proto_seckill_proto_enumTypes[1]
}

func (x InquireSeckillStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InquireSeckillStatus.Descriptor instead.
func (InquireSeckillStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{1}
}

type Seckill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartTime     int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Total         int64                  `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     int64                  `protobuf:"varint,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Seckill) Reset() {
	*x = Seckill{}
	mi := &file_proto_seckill_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seckill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seckill) ProtoMessage() {}

func (x *Seckill) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seckill.ProtoReflect.Descriptor instead.
func (*Seckill) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{0}
}

func (x *Seckill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Seckill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Seckill) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Seckill) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Seckill) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Seckill) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Seckill) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Seckill) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Seckill) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type CreateSeckillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartTime     int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Total         int64                  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeckillRequest) Reset() {
	*x = CreateSeckillRequest{}
	mi := &file_proto_seckill_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeckillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeckillRequest) ProtoMessage() {}

func (x *CreateSeckillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeckillRequest.ProtoReflect.Descriptor instead.
func (*CreateSeckillRequest) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSeckillRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSeckillRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSeckillRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CreateSeckillRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CreateSeckillRequest) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateSeckillResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSeckillResponse) Reset() {
	*x = CreateSeckillResponse{}
	mi := &file_proto_seckill_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSeckillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeckillResponse) ProtoMessage() {}

func (x *CreateSeckillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeckillResponse.ProtoReflect.Descriptor instead.
func (*CreateSeckillResponse) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSeckillResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSeckillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeckillRequest) Reset() {
	*x = GetSeckillRequest{}
	mi := &file_proto_seckill_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeckillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillRequest) ProtoMessage() {}

func (x *GetSeckillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillRequest.ProtoReflect.Descriptor instead.
func (*GetSeckillRequest) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{3}
}

func (x *GetSeckillRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSeckillResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seckill       *Seckill               `protobuf:"bytes,1,opt,name=seckill,proto3" json:"seckill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeckillResponse) Reset() {
	*x = GetSeckillResponse{}
	mi := &file_proto_seckill_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeckillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillResponse) ProtoMessage() {}

func (x *GetSeckillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillResponse.ProtoReflect.Descriptor instead.
func (*GetSeckillResponse) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{4}
}

func (x *GetSeckillResponse) GetSeckill() *Seckill {
	if x != nil {
		return x.Seckill
	}
	return nil
}

type JoinSeckillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeckillId     string                 `protobuf:"bytes,1,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinSeckillRequest) Reset() {
	*x = JoinSeckillRequest{}
	mi := &file_proto_seckill_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinSeckillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinSeckillRequest) ProtoMessage() {}

func (x *JoinSeckillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinSeckillRequest.ProtoReflect.Descriptor instead.
func (*JoinSeckillRequest) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{5}
}

func (x *JoinSeckillRequest) GetSeckillId() string {
	if x != nil {
		return x.SeckillId
	}
	return ""
}

func (x *JoinSeckillRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinSeckillResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status        JoinSeckillStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=proto.JoinSeckillStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinSeckillResponse) Reset() {
	*x = JoinSeckillResponse{}
	mi := &file_proto_seckill_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinSeckillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinSeckillResponse) ProtoMessage() {}

func (x *JoinSeckillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinSeckillResponse.ProtoReflect.Descriptor instead.
func (*JoinSeckillResponse) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{6}
}

func (x *JoinSeckillResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinSeckillResponse) GetStatus() JoinSeckillStatus {
	if x != nil {
		return x.Status
	}
	return JoinSeckillStatus_JOIN_SECKILL_STATUS_UNKNOWN
}

type InquireSeckillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeckillId     string                 `protobuf:"bytes,1,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InquireSeckillRequest) Reset() {
	*x = InquireSeckillRequest{}
	mi := &file_proto_seckill_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InquireSeckillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquireSeckillRequest) ProtoMessage() {}

func (x *InquireSeckillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquireSeckillRequest.ProtoReflect.Descriptor instead.
func (*InquireSeckillRequest) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{7}
}

func (x *InquireSeckillRequest) GetSeckillId() string {
	if x != nil {
		return x.SeckillId
	}
	return ""
}

func (x *InquireSeckillRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type InquireSeckillResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        InquireSeckillStatus   `protobuf:"varint,1,opt,name=status,proto3,enum=proto.InquireSeckillStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InquireSeckillResponse) Reset() {
	*x = InquireSeckillResponse{}
	mi := &file_proto_seckill_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InquireSeckillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquireSeckillResponse) ProtoMessage() {}

func (x *InquireSeckillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquireSeckillResponse.ProtoReflect.Descriptor instead.
func (*InquireSeckillResponse) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{8}
}

func (x *InquireSeckillResponse) GetStatus() InquireSeckillStatus {
	if x != nil {
		return x.Status
	}
	return InquireSeckillStatus_INQUIRE_SECKILL_STATUS_UNKNOWN
}

type CheckSeckillResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeckillId     string                 `protobuf:"bytes,1,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSeckillResultRequest) Reset() {
	*x = CheckSeckillResultRequest{}
	mi := &file_proto_seckill_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSeckillResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSeckillResultRequest) ProtoMessage() {}

func (x *CheckSeckillResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSeckillResultRequest.ProtoReflect.Descriptor instead.
func (*CheckSeckillResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{9}
}

func (x *CheckSeckillResultRequest) GetSeckillId() string {
	if x != nil {
		return x.SeckillId
	}
	return ""
}

func (x *CheckSeckillResultRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CheckSeckillResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSeckillResultResponse) Reset() {
	*x = CheckSeckillResultResponse{}
	mi := &file_proto_seckill_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSeckillResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSeckillResultResponse) ProtoMessage() {}

func (x *CheckSeckillResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seckill_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSeckillResultResponse.ProtoReflect.Descriptor instead.
func (*CheckSeckillResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_seckill_proto_rawDescGZIP(), []int{10}
}

func (x *CheckSeckillResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_seckill_proto protoreflect.FileDescriptor

var file_proto_seckill_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a,
	0x07, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x07, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x4c, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x16, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x19, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36,
	0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0xdf, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b,
	0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a,
	0x1d, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01,
	0x12, 0x20, 0x0a, 0x1c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49,
	0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x49, 0x50, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x4a, 0x4f,
	0x49, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x05, 0x2a, 0xa4, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43,
	0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x1f,
	0x0a, 0x1b, 0x49, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x32,
	0x99, 0x03, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x0e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x6c,
	0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x2d, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_seckill_proto_rawDescOnce sync.Once
	file_proto_seckill_proto_rawDescData []byte
)

func file_proto_seckill_proto_rawDescGZIP() []byte {
	file_proto_seckill_proto_rawDescOnce.Do(func() {
		file_proto_seckill_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_seckill_proto_rawDesc), len(file_proto_seckill_proto_rawDesc)))
	})
	return file_proto_seckill_proto_rawDescData
}

var file_proto_seckill_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_seckill_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_seckill_proto_goTypes = []any{
	(JoinSeckillStatus)(0),             // 0: proto.JoinSeckillStatus
	(InquireSeckillStatus)(0),          // 1: proto.InquireSeckillStatus
	(*Seckill)(nil),                    // 2: proto.Seckill
	(*CreateSeckillRequest)(nil),       // 3: proto.CreateSeckillRequest
	(*CreateSeckillResponse)(nil),      // 4: proto.CreateSeckillResponse
	(*GetSeckillRequest)(nil),          // 5: proto.GetSeckillRequest
	(*GetSeckillResponse)(nil),         // 6: proto.GetSeckillResponse
	(*JoinSeckillRequest)(nil),         // 7: proto.JoinSeckillRequest
	(*JoinSeckillResponse)(nil),        // 8: proto.JoinSeckillResponse
	(*InquireSeckillRequest)(nil),      // 9: proto.InquireSeckillRequest
	(*InquireSeckillResponse)(nil),     // 10: proto.InquireSeckillResponse
	(*CheckSeckillResultRequest)(nil),  // 11: proto.CheckSeckillResultRequest
	(*CheckSeckillResultResponse)(nil), // 12: proto.CheckSeckillResultResponse
}
var file_proto_seckill_proto_depIdxs = []int32{
	2,  // 0: proto.GetSeckillResponse.seckill:type_name -> proto.Seckill
	0,  // 1: proto.JoinSeckillResponse.status:type_name -> proto.JoinSeckillStatus
	1,  // 2: proto.InquireSeckillResponse.status:type_name -> proto.InquireSeckillStatus
	3,  // 3: proto.SeckillService.CreateSeckill:input_type -> proto.CreateSeckillRequest
	5,  // 4: proto.SeckillService.GetSeckill:input_type -> proto.GetSeckillRequest
	7,  // 5: proto.SeckillService.JoinSeckill:input_type -> proto.JoinSeckillRequest
	9,  // 6: proto.SeckillService.InquireSeckill:input_type -> proto.InquireSeckillRequest
	11, // 7: proto.SeckillService.CheckSeckillResult:input_type -> proto.CheckSeckillResultRequest
	4,  // 8: proto.SeckillService.CreateSeckill:output_type -> proto.CreateSeckillResponse
	6,  // 9: proto.SeckillService.GetSeckill:output_type -> proto.GetSeckillResponse
	8,  // 10: proto.SeckillService.JoinSeckill:output_type -> proto.JoinSeckillResponse
	10, // 11: proto.SeckillService.InquireSeckill:output_type -> proto.InquireSeckillResponse
	12, // 12: proto.SeckillService.CheckSeckillResult:output_type -> proto.CheckSeckillResultResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_seckill_proto_init() }
func file_proto_seckill_proto_init() {
	if File_proto_seckill_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_seckill_proto_rawDesc), len(file_proto_seckill_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_seckill_proto_goTypes,
		DependencyIndexes: file_proto_seckill_proto_depIdxs,
		EnumInfos:         file_proto_seckill_proto_enumTypes,
		MessageInfos:      file_proto_seckill_proto_msgTypes,
	}.Build()
	File_proto_seckill_proto = out.File
	file_proto_seckill_proto_goTypes = nil
	file_proto_seckill_proto_depIdxs = nil
}
